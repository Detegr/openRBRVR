name: Build openRBRVR

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up MSVC
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Download DirectX Headers
      run: |
        $url = 'https://github.com/apitrace/dxsdk/archive/refs/heads/master.zip'
        $headersPath = 'dxsdk-master/Include'
        Invoke-WebRequest -Uri $url -OutFile 'dx.zip'
        Expand-Archive -Path 'dx.zip' -DestinationPath '.'
        Move-Item -Path $headersPath -Destination 'C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\Include'

    - name: Cache Zig compiler
      id: cache-zig
      uses: actions/cache@v4
      with:
        path: zig-windows-x86_64-0.14.0
        key: ${{ runner.os }}-zig

    - name: Download Zig 0.14.0
      if: steps.cache-zig.outputs.cache-hit != 'true'
      run: |
        $url = 'https://ziglang.org/download/0.14.0/zig-windows-x86_64-0.14.0.zip'
        Invoke-WebRequest -Uri $url -OutFile 'zig.zip'
        Expand-Archive -Path 'zig.zip' -DestinationPath '.'

    - name: Build
      run: .\zig-windows-x86_64-0.14.0\zig.exe build --release=fast

    - name: Upload openRBRVR.dll
      uses: actions/upload-artifact@v4
      with:
        name: openRBRVR.dll
        path: zig-out\bin\openRBRVR.dll

    - name: Upload openRBRVR.pdb
      uses: actions/upload-artifact@v4
      with:
        name: openRBRVR.pdb
        path: zig-out\bin\openRBRVR.pdb

  release:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'workflow_dispatch' }}
    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Fetch tags
      run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

    - name: Download Build Artifact
      uses: actions/download-artifact@v4
      with:
        name: openRBRVR.dll

    - name: Create changelog
      id: changelog
      run: |
        changes=$(awk -v tag=$(git tag --sort=-creatordate | sed -n '2p') '$0 ~ "## " tag {exit} {print}' CHANGELOG.md | sed -e '1,2d')
        echo "CHANGELOG<<EOF" >> $GITHUB_ENV
        while IFS= read -r line; do
          echo $line >> $GITHUB_ENV
        done <<< "$changes"
        echo EOF >> $GITHUB_ENV

    - name: Create release zip
      id: release-zip
      run: |
        mkdir -p openRBRVR-${{ github.ref_name }}/Plugins/openRBRVR
        cp multiviewpatcher/multiviewpatcher.dll openRBRVR-${{ github.ref_name }}/Plugins/openRBRVR
        cp thirdparty/dll/* openRBRVR-${{ github.ref_name }}
        cp -r thirdparty/quad-views-foveated openRBRVR-${{ github.ref_name }}/Plugins/openRBRVR
        cp -r thirdparty/obsmirror openRBRVR-${{ github.ref_name }}/Plugins/openRBRVR
        cp openRBRVR.dll openRBRVR.toml.sample openRBRVR-${{ github.ref_name }}/Plugins
        cp LICENSE openRBRVR-${{ github.ref_name }}/Plugins/openRBRVR
        cp README.md openRBRVR-${{ github.ref_name }}/Plugins/openRBRVR/README.openrbrvr.txt
        cp README_FR.md openRBRVR-${{ github.ref_name }}/Plugins/openRBRVR/README_FR.openrbrvr.txt
        cp README_CZ.md openRBRVR-${{ github.ref_name }}/Plugins/openRBRVR/README_CZ.openrbrvr.txt
        cd openRBRVR-${{ github.ref_name }}
        zip -r ../openRBRVR-${{ github.ref_name }}.zip .

    - name: Create GitHub release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: ${{ github.ref_name }}
        draft: false
        prerelease: false
        body: ${{ env.CHANGELOG }}

    - name: Upload release asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: openRBRVR-${{ github.ref_name }}.zip
        asset_path: openRBRVR-${{ github.ref_name }}.zip
        asset_content_type: application/zip

